<?php
namespace HAPI;

/**
 * Represents the exploitation information of a planet (used for the "getexploitations" HAPI method).
 * @package HAPI
 * @author Mike Angstadt [github.com/mangstadt]
 */
class Exploitation{
	/**
	 * The planet's name
	 * @var string
	 */
	private $planetName;
	
	/**
	 * The planet's ID.
	 * @var integer
	 */
	private $planetId;
	
	/**
	 * The number of exploitations on the planet.
	 * @var integer
	 */
	private $exploits;
	
	/**
	 * The number of exploitations that are queued to be created.
	 * @var integer
	 */
	private $inPipe;
	
	/**
	 * The number of exploitations that are queued to be destroyed.
	 * @var integer
	 */
	private $toBeDemolished;
	
	/**
	 * The number of exploitations that are on sale.
	 * @var integer
	 */
	private $onSale;
	
	/**
	 * The sell price of the exploitations that are on sale.
	 * @var integer
	 */
	private $sellPrice;
	
	/**
	 * The rentability of the exploitations.
	 * @var integer
	 */
	private $rentability;
	
	/**
	 * Gets the planet's name
	 * @return string the planet's name
	 */
	public function getPlanetName(){
		return $this->planetName;
	}

	/**
	 * Sets the planet's name
	 * @param string $planetName the planet's name
	 */
	public function setPlanetName($planetName){
		$this->planetName = $planetName;
	}

	/**
	 * Gets the planet's ID.
	 * @return integer the planet's ID
	 */
	public function getPlanetId(){
		return $this->planetId;
	}

	/**
	 * Sets the planet's ID.
	 * @param integer $planetId the planet's ID
	 */
	public function setPlanetId($planetId){
		$this->planetId = $planetId;
	}

	/**
	 * Gets the number of exploitations on the planet.
	 * @return integer the number of exploitations on the planet
	 */
	public function getExploits(){
		return $this->exploits;
	}

	/**
	 * Sets the number of exploitations on the planet.
	 * @param integer $exploits the number of exploitations on the planet
	 */
	public function setExploits($exploits){
		$this->exploits = $exploits;
	}

	/**
	 * Gets the number of exploitations that are queued to be created.
	 * @return integer the number of exploitations that will be built
	 */
	public function getInPipe(){
		return $this->inPipe;
	}

	/**
	 * Sets the number of exploitations that are queued to be created.
	 * @param integer $inPipe the number of exploitations that will be built
	 */
	public function setInPipe($inPipe){
		$this->inPipe = $inPipe;
	}

	/**
	 * Gets the number of exploitations that are queued to be destroyed.
	 * @return integer the number of exploitations that will be destroyed
	 */
	public function getToBeDemolished(){
		return $this->toBeDemolished;
	}

	/**
	 * Sets the number of exploitations that are queued to be destroyed.
	 * @param integer $toBeDemolished the number of exploitations that will be destroyed
	 */
	public function setToBeDemolished($toBeDemolished){
		$this->toBeDemolished = $toBeDemolished;
	}

	/**
	 * Gets the number of exploitations that are on sale.
	 * @return integer the number of exploitations for sale
	 */
	public function getOnSale(){
		return $this->onSale;
	}

	/**
	 * Sets the number of exploitations that are on sale.
	 * @param integer $onSale the number of exploitations for sale
	 */
	public function setOnSale($onSale){
		$this->onSale = $onSale;
	}

	/**
	 * Gets the sell price of the exploitations that are on sale.
	 * @return integer the sell price
	 */
	public function getSellPrice(){
		return $this->sellPrice;
	}

	/**
	 * Sets the sell price of the exploitations that are on sale.
	 * @param integer $sellPrice the sell price
	 */
	public function setSellPrice($sellPrice){
		$this->sellPrice = $sellPrice;
	}

	/**
	 * Gets the rentability of the exploitations.
	 * @return integer the rentability
	 */
	public function getRentability(){
		return $this->rentability;
	}

	/**
	 * Sets the rentability of the exploitations.
	 * @param integer $rentability the rentability
	 */
	public function setRentability($rentability){
		$this->rentability = $rentability;
	}
}